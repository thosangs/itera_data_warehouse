services:
  airflow:
    platform: linux/amd64
    build:
      context: ..
      dockerfile: docker/dockerfile.airflow
    container_name: ${AIRFLOW_CONTAINER_NAME}
    hostname: ${AIRFLOW_HOST_NAME}
    entrypoint:
      - /bin/bash
      - /scripts/airflow_entrypoint.sh
    restart: always
    environment:
      - "AIRFLOW_CONN_MSSQL_DEFAULT=mssql+pyodbc://sa:${SA_PASSWORD}@mssql:1433/${DB_NAME}?driver=ODBC+Driver+18+for+SQL+Server&TrustServerCertificate=yes"
    volumes:
      - ../dags:/opt/airflow/dags
      - ../scripts:/scripts
      - ../../../:/opt/workspace
    ports:
      - ${AIRFLOW_WEBSERVER_PORT}:8080

  mssql:
    platform: linux/amd64
    image: mcr.microsoft.com/mssql/server:2022-CU14-ubuntu-22.04
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
      - mssql_backup:/var/opt/mssql/backup
      - ../../../:/opt/workspace
    healthcheck:
      test:
        [
          "CMD-SHELL",
          '([ -x /opt/mssql-tools/bin/sqlcmd ] && /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$SA_PASSWORD" -Q ''SELECT 1'') || ([ -x /opt/mssql-tools18/bin/sqlcmd ] && /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$SA_PASSWORD" -Q ''SELECT 1'')',
        ]
      interval: 5s
      timeout: 5s
      retries: 30

  mssql-initdb:
    image: mcr.microsoft.com/mssql/server:2022-CU14-ubuntu-22.04
    platform: linux/amd64
    depends_on:
      mssql:
        condition: service_healthy
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
      - DB_NAME=${DB_NAME}
    entrypoint:
      - /bin/bash
      - -lc
      - |
        set -e
        if [ -x /opt/mssql-tools18/bin/sqlcmd ]; then
          SQLCMD="/opt/mssql-tools18/bin/sqlcmd -C"
        elif [ -x /opt/mssql-tools/bin/sqlcmd ]; then
          SQLCMD=/opt/mssql-tools/bin/sqlcmd
        else
          echo "sqlcmd not found" >&2; exit 1
        fi
        echo "Ensuring DB $$DB_NAME exists..."
        $$SQLCMD -S mssql -U sa -P "$$SA_PASSWORD" -Q "IF DB_ID('$$DB_NAME') IS NULL CREATE DATABASE [$$DB_NAME];"
    restart: "no"

  sqlpad:
    image: sqlpad/sqlpad:7.5.7
    container_name: sqlpad
    depends_on:
      mssql:
        condition: service_healthy
      mssql-initdb:
        condition: service_completed_successfully
    ports:
      - "3000:3000"
    environment:
      - SQLPAD_ADMIN=${SQLPAD_ADMIN}
      - SQLPAD_ADMIN_PASSWORD=${SQLPAD_ADMIN_PASSWORD}
      - SQLPAD_APP_LOG_LEVEL=info
      - SQLPAD_WEB_LOG_LEVEL=warn
      - SQLPAD_CONNECTIONS__mssql__name=${DB_NAME}
      - SQLPAD_CONNECTIONS__mssql__driver=sqlserver
      - SQLPAD_CONNECTIONS__mssql__host=mssql
      - SQLPAD_CONNECTIONS__mssql__port=1433
      - SQLPAD_CONNECTIONS__mssql__database=${DB_NAME}
      - SQLPAD_CONNECTIONS__mssql__username=sa
      - SQLPAD_CONNECTIONS__mssql__password=${SA_PASSWORD}
    restart: unless-stopped

volumes:
  mssql_data:
  mssql_backup:
